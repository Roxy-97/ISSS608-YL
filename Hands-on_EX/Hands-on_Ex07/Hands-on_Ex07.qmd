---
title: "Hands-on Exercise 4C"
author: "Yang Lu"
date: "7 May 2025"
date-modified: "last-modified"
format: html
editor: visual
execute: 
  eval: true  
  echo: true  
  warning: false 
  freeze: true 
---

# Lesson 7: **Visualising Uncertainty**

## **7.1 Learning Outcome**

Visualising uncertainty is relatively new in statistical graphics. In this chapter, you will gain hands-on experience on creating statistical graphics for visualising uncertainty. By the end of this chapter you will be able:

-   to plot statistics error bars by using ggplot2,

-   to plot interactive error bars by combining ggplot2, plotly and DT,

-   to create advanced by using ggdist, and

-   to create hypothetical outcome plots (HOPs) by using ungeviz package.

## **7.2 Getting Started**

### **7.2.1 Installing and loading the packages**

the following R packages will be used, they are:

-   `tidyverse`, a family of R packages for data science process,

-   `plotly` for creating interactive plot,

-   `gganimate` for creating animation plot,

-   `DT` for displaying interactive html table,

-   `crosstalk` for for implementing cross-widget interactions (currently, linked brushing and filtering), and

-   `ggdist` for visualising distribution and uncertainty.

```{r}
pacman::p_load(plotly, crosstalk, DT, 
               ggdist, ggridges, colorspace,
               gganimate, tidyverse)

```

### **7.2.2 Data import**

```{r}
exam <- read_csv("Exam_data.csv")
exam
```

## **7.3 Visualizing the uncertainty of point estimates: ggplot2 methods**

A point estimate is a single number, such as a mean. Uncertainty, on the other hand, is expressed as standard error, confidence interval, or credible interval.

::: callout-important
Don’t confuse the uncertainty of a point estimate with the variation in the sample
:::

In this section, will learn how to plot error bars of maths scores by race by using data provided in *exam* tibble data frame.

Firstly, code chunk below will be used to derive the necessary summary statistics.

```{r}
my_sum <- exam %>%
  group_by(RACE) %>%
  summarise(
    n=n(),
    mean=mean(MATHS),
    sd=sd(MATHS)
    ) %>%
  mutate(se=sd/sqrt(n-1))

```

::: {#Things to learn from the code above .callout-tip} - -%\>% means Take the result on its left and pass it as the first argument to the function on its right

-   `group_by()` of **dplyr** package is used to group the observation by RACE,

-   `summarise()` is used to compute the count of observations, mean, standard deviation

-   n() is sample size

-   means() is calculate the mean for maths

-   sd() is calculate the strand error of maths

-   `mutate()` is used to derive standard error of Maths by RACE, and add one more column in list

-   the output is save as a tibble data table called *my_sum*. :::

::: callout-note
For the mathematical explanation, please refer to Slide 20 of Lesson 4.
:::

Next, the code chunk below will be used to display *my_sum* tibble data frame in an html table format.

::: panel-tabset
### The code chunk

```{r}
#| eval: false
knitr::kable(head(my_sum), format = 'html')

```

### The table

```{r}
#| echo: false
knitr::kable(head(my_sum), format = 'html')

```
:::

### **7.3.1 Plotting [standard error bars]{style="color:red"} of point estimates**

Now we are ready to plot the standard error bars of mean maths score by race as shown below.

::: panel-tabset
### The code chunk

```{r}
#| eval: false
ggplot(my_sum) +
  geom_errorbar(
    aes(x=RACE, 
        ymin=mean-se, 
        ymax=mean+se), 
    width=0.2, 
    colour="black", 
    alpha=0.9, 
    linewidth=0.5) +
  geom_point(aes
           (x=RACE, 
            y=mean), 
           stat="identity", 
           color="red",
           size = 1.5,
           alpha=1) +
  ggtitle("Standard error of mean maths score by rac")

```

### The plot

```{r}
#| echo: false
ggplot(my_sum) +
  geom_errorbar(
    aes(x=RACE, 
        ymin=mean-se, 
        ymax=mean+se), 
    width=0.2, 
    colour="black", 
    alpha=0.9, 
    linewidth=0.5) +
  geom_point(aes  #display mean for each group
           (x=RACE, 
            y=mean), 
           stat="identity", 
           color="red",
           size = 1.5,
           alpha=1) +
  ggtitle("Standard error of mean maths score by rac")

```
:::

::: {#Things to learn from above code .callout-tip} - The error bars are computed by using the formula mean+/-se.

-   For `geom_point()`, it is important to indicate *stat=“identity”*. :::

### **7.3.2 Plotting [confidence interval]{style="color:red"} of point estimates**

Instead of plotting the standard error bar of point estimates, we can also plot the confidence intervals of mean maths score by race.

::: panel-tabset
### The code chunk

```{r}
#| eval: false
ggplot(my_sum) +
  geom_errorbar(
    aes(x=reorder(RACE, -mean), 
        ymin=mean-1.96*se, 
        ymax=mean+1.96*se), 
    width=0.2, 
    colour="black", 
    alpha=0.9, 
    linewidth=0.5) +
  geom_point(aes
           (x=RACE, 
            y=mean), 
           stat="identity", 
           color="red",
           size = 1.5,
           alpha=1) +
  labs(x = "Maths score",
       title = "95% confidence interval of mean maths score by race")
```

### The plot

```{r}
#| echo: false
ggplot(my_sum) +
  geom_errorbar(
    aes(x=reorder(RACE, -mean), 
        ymin=mean-1.96*se, 
        ymax=mean+1.96*se), 
    width=0.2, 
    colour="black", 
    alpha=0.9, 
    linewidth=0.5) +
  geom_point(aes
           (x=RACE, 
            y=mean), 
           stat="identity", 
           color="red",
           size = 1.5,
           alpha=1) +
  labs(x = "Maths score",
       title = "95% confidence interval of mean maths score by race")
```
:::
