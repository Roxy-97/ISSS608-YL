---
title: "Hands-on Exercise 2"
author: "Yang Lu"
date: "23 April 2025"
date-modified: "last-modified"
format: html
editor: visual
execute: 
  eval: true  # running the code
  echo: true  # display the code
  warning: false # closed the warning message
  freeze: true 
---

# Lesson 2: Designing Graphs to Enlighten

## **2.1 Overview**

ggplot2 Extensions for Enhanced Graphics

**ggrepel**: Helps control the placement of text labels to avoid overlap, making annotations clearer.

**ggthemes & hrbrthemes**: Provide professional and publication-ready themes to enhance the visual appeal of your plots.

**patchwork**: Allows to easily combine multiple ggplot2 graphs into composite figures for clearer storytelling.

## **2.2 Getting started**

### **2.2.1** Installing and loading all required libraries

```{r}
pacman::p_load(tidyverse)
```

```{r}
pacman::p_load(ggrepel, patchwork, 
               ggthemes, hrbrthemes,
               tidyverse) 
```

### **2.2.2** Importing data

```{r}
exam_data <- read_csv("Exam_data.csv")
```

## 2.3 Beyond ggplot2 Annotation: ggrepel

#### As default \_overlapping text

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

```

### **2.3.1 Working with ggrepel**

#### applying **geom_Label_repel** ：Aim of ggrepel is to repel overlapping text

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")


```

## 2.4 Beyond ggplot2 Themes

[Themes](https://ggplot2.tidyverse.org/reference/ggtheme.html)

::: panel-tabset
##theme_gray()

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20,   #The data is split into 20 bars 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_gray() +
  ggtitle("Distribution of Maths scores") 

```

## theme_bw()

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20,   #The data is split into 20 bars 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_bw() +
  ggtitle("Distribution of Maths scores") 

```

## theme_classic()

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20,   #The data is split into 20 bars 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_classic() +
  ggtitle("Distribution of Maths scores") 

```

## theme_dark()

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20,   #The data is split into 20 bars 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_dark() +
  ggtitle("Distribution of Maths scores")

```

## theme_light()

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20,   #The data is split into 20 bars 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_light() +
  ggtitle("Distribution of Maths scores")
```

## theme_linedraw()

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20,   #The data is split into 20 bars 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_linedraw() +
  ggtitle("Distribution of Maths scores")
```

## theme_minimal()

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20,   #The data is split into 20 bars 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_minimal() +
  ggtitle("Distribution of Maths scores")
```

## theme_void()

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20,   #The data is split into 20 bars 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_void() +
  ggtitle("Distribution of Maths scores")
```
:::

### 2.4.1 Working with ggtheme package

#### Using Economist theme

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_economist()

```

It also provides some extra geoms and scales for ‘ggplot2’. Consult this vignette to learn more.

[this vignette](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/)

### 2.4.2 Working with hrbthems package

provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size = 15,
              grid = "Y")

```

## 2.5 Beyond Single Graph

#### Maths scores as p1

```{r}
p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores")

print(p1) # the graphic save in p1, using print(p1) or directly write p1 to show 
```

#### English scores as p2

```{r}
p2 <- ggplot(data=exam_data, 
             aes(x = ENGLISH)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores")
print(p2)
```

#### Drawing a scatterplot for English score versus Maths score as p3

```{r}
p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

p3
```

### 2.5.1 Creating Composite Graphics: pathwork methods

[grid.arrange()](https://cran.r-project.org/web/packages/gridExtra/vignettes/arrangeGrob.html)

```{r}
library(gridExtra) # install package

grid.arrange(p1, p2,p3,ncol=2)  

```

[plot_grid()](https://wilkelab.org/cowplot/reference/plot_grid.html)

```{r}
library(cowplot) 

plot_grid(p1, p2,p3)  

```

### 2.5.2 For combining two ggplot2 graphs - using plus sign+

```{r}
p1+p2

```

### 2.5.3 Combining three ggplot2 graphs

-   “/” operator to stack two ggplot2 graphs

-   “\|” operator to place the plots beside each other

-   “()” operator the define the sequence of the plotting.

```{r}
library(patchwork)
(p1/p2) | p3

```

### 2.5.4 Creating a composite figure with tag

```{r}
((p1 / p2) | p3) + 
  plot_annotation(tag_levels = 'I')
```

### **2.5.5 Creating figure with insert** - using inset_element()

[inset_element()](https://patchwork.data-imaginist.com/reference/inset_element.html)

```{r}
p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)
```

**Insert two elements**

```{r}
p3 +
  inset_element(p1,
                left = 0.05, bottom = 0.55,
                right = 0.45, top = 0.95) +
  inset_element(p2,
                left = 0.55, bottom = 0.05,
                right = 0.95, top = 0.45)
                                           
```

### 2.5.6 Creating a composite figure by using patchwork and ggtheme

```{r}
#| fig-width: 18
#| fig-height: 10
patchwork <- (p1 / p2) | p3 
patchwork & theme_economist()
```
