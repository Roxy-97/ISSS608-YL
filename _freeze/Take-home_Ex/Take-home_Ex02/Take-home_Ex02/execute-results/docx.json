{
  "hash": "c0b7c3b9555f302eeac5b65b7c7f5430",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 01 phase 2\"\nauthor: \"Yang Lu\"\ndate: \"9 May 2025\"\ndate-modified: \"last-modified\"\nformat: docx\neditor: visual\nexecute: \n  eval: true  \n  echo: true  \n  warning: false \n  freeze: true \n---\n\n\n\n## Overview Task\n\nIn this exercise, we select a peer submission of Take-home Exercise 1.\n\n-   Critic good design principles\n\n-   Recommendations for further improvement\n\n-   Present a makeover version of the data\n\n## Getting started\n\n### Load required packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse,dplyr,\n               ggplot2, forcats, \n               scales,patchwork)\n```\n:::\n\n\n\n### Import data\n\nThe data used in this exercise is the same as the data used in the Take-home Exercise 1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulation_age_sex_2024 <- read_csv(\"respopagesex2024/respopagesex2024.csv\")\npopulation_age_sex_2024\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 60,424 × 6\n   PA         SZ                     Age   Sex       Pop  Time\n   <chr>      <chr>                  <chr> <chr>   <dbl> <dbl>\n 1 Ang Mo Kio Ang Mo Kio Town Centre 0     Males      10  2024\n 2 Ang Mo Kio Ang Mo Kio Town Centre 0     Females    10  2024\n 3 Ang Mo Kio Ang Mo Kio Town Centre 1     Males      10  2024\n 4 Ang Mo Kio Ang Mo Kio Town Centre 1     Females    10  2024\n 5 Ang Mo Kio Ang Mo Kio Town Centre 2     Males      10  2024\n 6 Ang Mo Kio Ang Mo Kio Town Centre 2     Females    10  2024\n 7 Ang Mo Kio Ang Mo Kio Town Centre 3     Males      10  2024\n 8 Ang Mo Kio Ang Mo Kio Town Centre 3     Females    10  2024\n 9 Ang Mo Kio Ang Mo Kio Town Centre 4     Males      30  2024\n10 Ang Mo Kio Ang Mo Kio Town Centre 4     Females    10  2024\n# ℹ 60,414 more rows\n```\n\n\n:::\n:::\n\n\n\n### Data Processing\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(population_age_sex_2024)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [60,424 × 6] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ PA  : chr [1:60424] \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" ...\n $ SZ  : chr [1:60424] \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" ...\n $ Age : chr [1:60424] \"0\" \"0\" \"1\" \"1\" ...\n $ Sex : chr [1:60424] \"Males\" \"Females\" \"Males\" \"Females\" ...\n $ Pop : num [1:60424] 10 10 10 10 10 10 10 10 30 10 ...\n $ Time: num [1:60424] 2024 2024 2024 2024 2024 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   PA = col_character(),\n  ..   SZ = col_character(),\n  ..   Age = col_character(),\n  ..   Sex = col_character(),\n  ..   Pop = col_double(),\n  ..   Time = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsort(unique(population_age_sex_2024$Age))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"0\"           \"1\"           \"10\"          \"11\"          \"12\"         \n [6] \"13\"          \"14\"          \"15\"          \"16\"          \"17\"         \n[11] \"18\"          \"19\"          \"2\"           \"20\"          \"21\"         \n[16] \"22\"          \"23\"          \"24\"          \"25\"          \"26\"         \n[21] \"27\"          \"28\"          \"29\"          \"3\"           \"30\"         \n[26] \"31\"          \"32\"          \"33\"          \"34\"          \"35\"         \n[31] \"36\"          \"37\"          \"38\"          \"39\"          \"4\"          \n[36] \"40\"          \"41\"          \"42\"          \"43\"          \"44\"         \n[41] \"45\"          \"46\"          \"47\"          \"48\"          \"49\"         \n[46] \"5\"           \"50\"          \"51\"          \"52\"          \"53\"         \n[51] \"54\"          \"55\"          \"56\"          \"57\"          \"58\"         \n[56] \"59\"          \"6\"           \"60\"          \"61\"          \"62\"         \n[61] \"63\"          \"64\"          \"65\"          \"66\"          \"67\"         \n[66] \"68\"          \"69\"          \"7\"           \"70\"          \"71\"         \n[71] \"72\"          \"73\"          \"74\"          \"75\"          \"76\"         \n[76] \"77\"          \"78\"          \"79\"          \"8\"           \"80\"         \n[81] \"81\"          \"82\"          \"83\"          \"84\"          \"85\"         \n[86] \"86\"          \"87\"          \"88\"          \"89\"          \"9\"          \n[91] \"90_and_Over\"\n```\n\n\n:::\n:::\n\n\n\n#### Creating a Numeric Age Column\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- population_age_sex_2024 %>%\n  mutate(\n    AgeNum = suppressWarnings(\n      ifelse(Age == \"90_and_Over\", 90, as.numeric(Age))\n    )\n  )\n```\n:::\n\n\n\n#### Creating Age Grouping\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- df %>%\n  mutate(\n    AgeGroup = case_when(\n      AgeNum <= 12 ~ \"Child\",\n      AgeNum <= 24 ~ \"Youth\",\n      AgeNum <= 64 ~ \"Adult\",\n      TRUE ~ \"Senior\"\n    )\n  )\n```\n:::\n\n\n\n## Visualization: **Population by Age / Age Group**\n\n### Original Design\n\nThis visualization shows two charts for Singapore’s resident population (2024):\n\n1.  **Total Population by Age** – population by single-age bar chart\n\n2.  **Population by Age Group** – a 4-category bar chart (Child, Youth, Adult, Senior)\n\nThe original design is shown below.\n\n![](images/clipboard-2153998124.png){width=\"532\"}\n\n### **Critique for Population by Age / Age Group**\n\n::: {.callout-caution icon=\"false\"}\n## Clarity\n\n**Clear Aspects**\n\n-   Bars are labeled and vertically aligned, allowing easy mapping to axis values.\n\n-   Axis titles (“Age” / “Age-Group” and “Population”) are clearly stated.\n\n-    Insights below the charts succinctly summarize the key takeaways.\n\n**Confusing Aspects**\n\n-   For Total Population by Age chart\n\n    -   The x-axis includes every single age, making it difficult to identify exact values for each one.\n\n    -   The age on the x-axis cuts off after age 75, making the data appear incomplete.\n\n    -   The y-axis has a maximum of 60,000, but some age bars exceeded above the limit and appear visually clipped.\n\n-   Population by Age Group chart\n\n    -   Age groups are labeled as “Child,” “Youth,” etc., without their numeric ranges (e.g. 0–14, 15–24), making the groupings harder to interpret.\n\n    -   The order of age groups “Adult, Child, Senior, Youth,” does not follow a logical age progression, making it harder to grasp at a glance which can confuse viewers on first impression.\n:::\n\n::: {.callout-tip icon=\"false\"}\n## Aesthetics\n\n**Visually Appealing**\n\n-   The minimalist design keeps the focus on the bars by reducing distractions.\n\n-   Bold chart titles and axis labels enhance's readability.\n\n**Visually Distracting**\n\n-   For Total Population by Age chart\n\n    -   The wide age range makes it hard to distinguish where one age group ends and another begings.\n\n    -   Bars do not display actual population values for easier understanding at first glance.\n\n-   For Population by Age Group chart\n\n    -   The absence of data labels on bars forces viewers to rely on the y-axis to estimate values.\n:::\n\n### Remake\n\n::: panel-tabset\n### Total Population by Age (The Plot)\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-docx/unnamed-chunk-7-1.png)\n:::\n:::\n\n\n\n### Total Population by Age (The code chunk)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(scales)\n\nbin_labels <- c(paste0(seq(0, 85, by = 5), \"-\", seq(4, 89, by = 5)), \"90+\")\n\npop_5yr <- df %>%\n  mutate(\n    AgeNum = suppressWarnings(\n      ifelse(Age %in% c(\"90_and_over\",\"90_and_above\"), 90, as.numeric(Age))\n    ),\n    AgeBin = cut(\n      AgeNum,\n      breaks = c(seq(0, 90, by = 5), Inf),\n      labels = bin_labels,\n      right = FALSE\n    )\n  ) %>%\n  replace_na(list(AgeBin = \"90+\")) %>%\n  group_by(AgeBin) %>%\n  summarise(Pop = sum(Pop, na.rm = TRUE), .groups = \"drop\") %>%\n  mutate(AgeBin = factor(AgeBin, levels = bin_labels))\n\n\nggplot(pop_5yr, aes(x = AgeBin, y = Pop)) +\n  geom_col(fill = \"#28D6D7\", color = \"white\") +\n  geom_text(\n    aes(label = comma(Pop)),\n    vjust = -0.3,               \n    size = 5,                   \n    color = \"#D72928\"\n  ) +\n  scale_y_continuous(\n    breaks = seq(0, 350000, 50000),\n    limits = c(0, 440000),      \n    labels = comma,\n    expand = expansion(add = c(0, 0))\n  ) +\n  labs(\n    title = \"Singapore Resident Population (Y2024)\",\n    x     = \"Age\",\n    y     = \"Population\"\n  ) +\n  theme_minimal(base_size = 25) +\n  theme(\n    axis.text.x        = element_text(angle = 45, hjust = 1),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor   = element_blank()\n  )\n```\n:::\n\n\n\n### population by age group (The Plot)\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-docx/unnamed-chunk-9-1.png)\n:::\n:::\n\n\n\n### population by age group (The code chunk )\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(RColorBrewer)\nlibrary(scales)\n\ndf2 <- df %>%\n  mutate(\n    AgeNum = suppressWarnings(\n      ifelse(Age %in% c(\"90_and_over\",\"90_and_above\"),\n             90,\n             as.numeric(Age))\n    )\n  ) %>%\n\n  mutate(\n    AgeGroup = case_when(\n      AgeNum <= 12 ~ \"Child (0–12)\",\n      AgeNum <= 24 ~ \"Youth (13–24)\",\n      AgeNum <= 64 ~ \"Adult (25–64)\",\n      TRUE         ~ \"Senior (65+)\"\n    ),\n    AgeGroup = factor(\n      AgeGroup,\n      levels = c(\"Child (0–12)\",\n                 \"Youth (13–24)\",\n                 \"Adult (25–64)\",\n                 \"Senior (65+)\")\n    )\n  )\n\np2_new <- df2 %>%\n  group_by(AgeGroup) %>%\n  summarise(Pop = sum(Pop, na.rm = TRUE), .groups = \"drop\") %>%\n  ggplot(aes(x = AgeGroup, y = Pop, fill = AgeGroup)) +\n    geom_col(color = \"white\") +\n    geom_text(aes(label = comma(Pop)), vjust = -0.3, size = 3) +\n    scale_y_continuous(labels = comma, expand = expansion(mult = c(0, .05))) +\n    scale_fill_brewer(palette = \"Set2\", name = \"Age Group\") +\n    labs(\n      title   = \"Population by Age Group\",\n      x       = NULL,\n      y       = \"Population\",\n      caption = \"Data source: Singapore Department of Statistics (June 2024)\"\n    ) +\n    theme_minimal(base_size = 14) +\n    theme(\n      legend.position   = \"right\",\n      legend.title      = element_text(size = 12, face = \"bold\"),\n      legend.text       = element_text(size = 10),\n      axis.text.x       = element_text(angle = 45, hjust = 1, size = 12),\n      panel.grid.major.x = element_blank(),\n      panel.grid.minor   = element_blank(),\n      plot.caption      = element_text(size = 9, hjust = 1, face = \"italic\")\n    )\n\nprint(p2_new)\n```\n:::\n\n\n:::\n\n::: {.callout-note style=\"background-color: #D9FEF8;\" icon=\"false\"}\n## Refinements\n\n-   **Clearer Age Grouping**: Replaced 91 single-age bins with broader 5-year intervals (e.g., 0–4, 5–9, ..., 85–89, 90+), making cohort sizes easier to interpret at a glance.\n\n-   **Labeled Group Names**: Added numeric ranges to group labels — e.g., “Child (0–12)”, “Youth (13–24)” — so each label conveys full meaning without requiring external reference.\n\n-   **Value Labels on Bars**: Population counts are now displayed directly above each bar in a contrasting color, reducing reliance on the y-axis for exact values.\n\n-   **Improved Text Legibility**: Increased base font sizes (including for titles, axis labels, and bar labels), ensuring readability even in high-resolution displays or print.\n:::\n\n## Summary and conclusion\n\nBy grouping ages into 5-year bins and enriching the labels, we transformed a busy histogram and a loosely ordered bar chart into concise, self-contained visuals. These redesigned plots not only improve readability and accessibility but also make the demographic story of Singapore—its strong working-age base, shrinking youth cohorts, and emerging aging population—more transparent for policymakers and stakeholders.\n\n## **Reference**\n\n<https://cabbage-wonderland.netlify.app/takehome_ex/takehome_ex01/takehome_ex01#overview>\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}