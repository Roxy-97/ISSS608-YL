{
  "hash": "f5d88140164ce3624df8955146dc099f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 4C\"\nauthor: \"Yang Lu\"\ndate: \"7 May 2025\"\ndate-modified: \"last-modified\"\nformat: html\neditor: visual\nexecute: \n  eval: true  \n  echo: true  \n  warning: false \n  freeze: true \n---\n\n\n\n# Lesson 7: **Visualising Uncertainty**\n\n## **7.1 Learning Outcome**\n\nVisualising uncertainty is relatively new in statistical graphics. In this chapter, you will gain hands-on experience on creating statistical graphics for visualising uncertainty. By the end of this chapter you will be able:\n\n-   to plot statistics error bars by using ggplot2,\n\n-   to plot interactive error bars by combining ggplot2, plotly and DT,\n\n-   to create advanced by using ggdist, and\n\n-   to create hypothetical outcome plots (HOPs) by using ungeviz package.\n\n## **7.2 Getting Started**\n\n### **7.2.1 Installing and loading the packages**\n\nthe following R packages will be used, they are:\n\n-   `tidyverse`, a family of R packages for data science process,\n\n-   `plotly` for creating interactive plot,\n\n-   `gganimate` for creating animation plot,\n\n-   `DT` for displaying interactive html table,\n\n-   `crosstalk` for for implementing cross-widget interactions (currently, linked brushing and filtering), and\n\n-   `ggdist` for visualising distribution and uncertainty.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(plotly, crosstalk, DT, \n               ggdist, ggridges, colorspace,\n               gganimate, tidyverse)\n```\n:::\n\n\n\n### **7.2.2 Data import**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam <- read_csv(\"Exam_data.csv\")\nexam\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 322 × 7\n   ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n   <chr>      <chr> <chr>  <chr>     <dbl> <dbl>   <dbl>\n 1 Student321 3I    Male   Malay        21     9      15\n 2 Student305 3I    Female Malay        24    22      16\n 3 Student289 3H    Male   Chinese      26    16      16\n 4 Student227 3F    Male   Chinese      27    77      31\n 5 Student318 3I    Male   Malay        27    11      25\n 6 Student306 3I    Female Malay        31    16      16\n 7 Student313 3I    Male   Chinese      31    21      25\n 8 Student316 3I    Male   Malay        31    18      27\n 9 Student312 3I    Male   Malay        33    19      15\n10 Student297 3H    Male   Indian       34    49      37\n# ℹ 312 more rows\n```\n\n\n:::\n:::\n\n\n\n## **7.3 Visualizing the uncertainty of point estimates: ggplot2 methods**\n\nA point estimate is a single number, such as a mean. Uncertainty, on the other hand, is expressed as standard error, confidence interval, or credible interval.\n\n::: callout-important\nDon’t confuse the uncertainty of a point estimate with the variation in the sample\n:::\n\nIn this section, will learn how to plot error bars of maths scores by race by using data provided in *exam* tibble data frame.\n\nFirstly, code chunk below will be used to derive the necessary summary statistics.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_sum <- exam %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n```\n:::\n\n\n\n::: {#Things to learn from the code above .callout-tip} - -%\\>% means Take the result on its left and pass it as the first argument to the function on its right\n\n-   `group_by()` of **dplyr** package is used to group the observation by RACE,\n\n-   `summarise()` is used to compute the count of observations, mean, standard deviation\n\n-   n() is sample size\n\n-   means() is calculate the mean for maths\n\n-   sd() is calculate the strand error of maths\n\n-   `mutate()` is used to derive standard error of Maths by RACE, and add one more column in list\n\n-   the output is save as a tibble data table called *my_sum*. :::\n\n::: callout-note\nFor the mathematical explanation, please refer to Slide 20 of Lesson 4.\n:::\n\nNext, the code chunk below will be used to display *my_sum* tibble data frame in an html table format.\n\n::: panel-tabset\n### The code chunk\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(head(my_sum), format = 'html')\n```\n:::\n\n\n\n### The table\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> RACE </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> mean </th>\n   <th style=\"text-align:right;\"> sd </th>\n   <th style=\"text-align:right;\"> se </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Chinese </td>\n   <td style=\"text-align:right;\"> 193 </td>\n   <td style=\"text-align:right;\"> 76.50777 </td>\n   <td style=\"text-align:right;\"> 15.69040 </td>\n   <td style=\"text-align:right;\"> 1.132357 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Indian </td>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 60.66667 </td>\n   <td style=\"text-align:right;\"> 23.35237 </td>\n   <td style=\"text-align:right;\"> 7.041005 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Malay </td>\n   <td style=\"text-align:right;\"> 108 </td>\n   <td style=\"text-align:right;\"> 57.44444 </td>\n   <td style=\"text-align:right;\"> 21.13478 </td>\n   <td style=\"text-align:right;\"> 2.043177 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Others </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 69.66667 </td>\n   <td style=\"text-align:right;\"> 10.72381 </td>\n   <td style=\"text-align:right;\"> 3.791438 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n:::\n\n### **7.3.1 Plotting [standard error bars]{style=\"color:red\"} of point estimates**\n\nNow we are ready to plot the standard error bars of mean maths score by race as shown below.\n\n::: panel-tabset\n### The code chunk\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n```\n:::\n\n\n\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex07_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n:::\n\n::: {#Things to learn from above code .callout-tip} - The error bars are computed by using the formula mean+/-se.\n\n-   For `geom_point()`, it is important to indicate *stat=“identity”*. :::\n\n### **7.3.2 Plotting [confidence interval]{style=\"color:red\"} of point estimates**\n\nInstead of plotting the standard error bar of point estimates, we can also plot the confidence intervals of mean maths score by race.\n\n::: panel-tabset\n### The code chunk\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n```\n:::\n\n\n\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex07_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n:::\n",
    "supporting": [
      "Hands-on_Ex07_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}